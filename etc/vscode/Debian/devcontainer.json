{
	"name": "Debian",
	"build": {
		"dockerfile": "base.Dockerfile",
		// Update 'VARIANT' to pick an Debian version: bullseye, buster
		// Use bullseye on local arm64/Apple Silicon.
		"args": { "VARIANT": "bullseye" }
	},
	"containerEnv": {
		"CC": "clang",
		"CFLAGS": "-g",
		"CXX": "clang++",
		"CXXFLAGS": "-g"
	},

	// Set *default* container specific settings.json values on container create.
	"settings": {
		"terminal.integrated.defaultProfile.linux": "zsh",
		"terminal.integrated.profiles.linux": {
			"bash": {
				"path": "bash",
				"icon": "terminal-bash"
			},
			"zsh": {
				"path": "zsh"
			},
			"fish": {
				"path": "fish"
			},
			"tmux": {
				"path": "tmux",
				"icon": "terminal-tmux"
			},
			"pwsh": {
				"path": "pwsh",
				"icon": "terminal-powershell"
			}
		},
	},

	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"ms-vscode-remote.vscode-remote-extensionpack",
		"ms-vscode.live-server",
		"ms-vsliveshare.vsliveshare-pack",
		"GitHub.vscode-pull-request-github",
		"GitHub.remotehub",
		"ms-vscode.cpptools-extension-pack",
		"ms-vscode.cmake-tools",
		"ms-python.python",
		"ms-python.vscode-pylance",
		"ms-toolsai.jupyter",
		"vscjava.vscode-java-pack",
		"redhat.vscode-xml",
		"redhat.vscode-yaml",
		"bierner.github-markdown-preview",
		"lextudio.restructuredtext-pack"
	],

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
	// "mounts": [ "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind" ],

	// Uncomment when using a ptrace-based debugger like C++, Go, and Rust
	"runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],

	// Comment out to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "vscode",
}