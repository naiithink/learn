`ls -F`

'/'     directory
'*'     executable
'@'     symbolic link
'='     socket
'%'     whiteout
'|'     FIFO

---

`docker run`

Mac

```
docker run \
-it \
--name <name> \
--mount type=bind,source=/Users/naiithink/entries,target=/mnt \
--mount type=bind,source="$(readlink /Users/naiithink/entries/projects)",target=/mnt/projects \
--mount type=bind,source="$(readlink /Users/naiithink/entries/terminal)",target=/mnt/terminal \
<image> \
```

Linux

```
sudo docker run \
-it \
--name <name> \
--mount type=bind,source=/home/naiithink/entries,target=/mnt \
--mount type=bind,source="$(readlink /home/naiithink/entries/projects)",target=/mnt/projects \
--mount type=bind,source="$(readlink /home/naiithink/entries/terminal)",target=/mnt/terminal \
<image>
```

```
sudo docker run -it --name <name> --mount type=bind,source=/home/naiithink/entries,target=/mnt --mount type=bind,source="$(readlink /home/naiithink/entries/projects)",target=/mnt/projects --mount type=bind,source="$(readlink /home/naiithink/entries/terminal)",target=/mnt/terminal \
```

Windows (via WSL)

```
docker run \
-it \
--name <name> \
--mount type=bind,source=/mnt/c/Users/naiithink/entries,target=/mnt \
--mount type=bind,source="$(readlink /mnt/c/Users/naiithink/entries/projects)",target=/mnt/projects \
--mount type=bind,source="$(readlink /mnt/c/Users/naiithink/entries/terminal)",target=/mnt/terminal \
<image>
```

```
docker run -it --name <name> --mount type=bind,source=C:\Users\naiithink\entries,target=/mnt --mount type=bind,source="$(readlink C:\Users\naiithink\entries\projects)",target=/mnt/projects --mount type=bind,source="$(readlink C:\Users\naiithink\entries\terminal)",target=/mnt/terminal 
```
docker run -it --name ubuntu_arm64 --mount type=bind,source=C:\Users\naiithink\entries,target=/mnt --mount type=bind,source="$(readlink C:\Users\naiithink\entries\projects)",target=/mnt/projects --mount type=bind,source="$(readlink C:\Users\naiithink\entries\terminal)",target=/mnt/terminal 6d5e620f799c
docker run -it --name ubuntu_arm64 --mount type=bind,source=C:\Users\naiithink\entries,target=/mnt 6d5e620f799c

```
docker run -it --name amd64_ubuntu --mount type=bind,source="C:\Users\naiithink\entries",target="/mnt" --mount type=bind,source="C:\Users\naiithink\entries",target="/mnt" <image>
```

---

~/
        entries/
                lambda/
                        ...
                projects@ -> ~/projects
                QuickNote.txt@ -> */OneDrive-Personal/QuickNote.txt
                terminal@ -> ~/terminal
                ... [ '@' | '/' ]$      // mount point

        etc/
                docker/
                        build/
                                ... [ '/' ]$
                        ... [ '/' ]$*
                obs/
                        profiles/
                                ...
                        scenes/
                                ...
                        ... [ '/' ]$*
                ... [ '/' ]$

        files/
                screenshots@ -> */OneDrive-Personal/Pictures/Screenshots/
                music/
                        ...
                pictures/
                        stock@ -> */OneDrive-Personal/Pictures/stock/
                        profile/
                        wallpapers/
                        ...
                videos/
                        ...
                ... [ '/' ]$*

        mnt/
                ... [ '/' ]$            // mount point for cloud storage and virtual drive

        projects/
                ... [ '/' ]$            // mountable private repositories

        sprojects/
                pages/                  // git
                ... [ '/' ]$            // unmountable private repositories

        terminal/
                ...                     // shared area between host and VMs

        usr/
                bin/
                        ... [ '*' | '/' -> '*' ]$
                include/
                        ...
                lib/
                        ...
                libexec/
                        ...
                share/
                        ...

        var/
				fonts/
						static/
								...
                src/
                        ... [ '/' ]$    // named by orgs
                templates/
                        email/
                                ...
                        office/
                                ...
                ... [ '/' ]$

        volumes/
                ...
                
        ...