/*
*   Reminders:
*       - ALWAYS `memcheck` before release. -- `Valgrind`
*   2DO:
*       [ ] APPLY getopt_long()
*       [ ] MAKE yep_write_log()
*       [ ] MAKE yep_json()
*/

#include <getopt.h>
#include <limits.h>
#include <stdio.h>
#include <stdlib.h>
#include <stdarg.h>
#include <sys/dir.h>
#include <sys/param.h>
#include <sys/types.h>
// #include <time.h>
#include <unistd.h>

#include "yep.h"

#define MEASURE_EXEC_TIME 1

/* Custom functions. */
int is_on_supported_platform (void);

/* Custom declaration. */
static int exit_status;

/* ONLY `return` at the end of main(). */
int
main (int argc, char **argv)
{
    yep_ok ok = dne;

    if (!YEP_IS_IN || !YEP_IS_ON || !is_on_supported_platform())
        ok = false;
        /* <-- APPLY yep_write_log() here. --> */
    if (ok)
{
    /* if ((ch = getopt_long(argc, argv, "bf:", longopts, NULL)) == -1) */
    // {
        
    // }
}
    
    return exit_status = ok ? EXIT_SUCCESS : EXIT_FAILURE;
}

int
is_on_supported_platform (void)
{
    /* APPLY yep_json() in here. */
    int res = 0;
    if (YEP_IS_IN && YEP_IS_ON)
        res = 1;
    else
        res = 0;
    return res;
}